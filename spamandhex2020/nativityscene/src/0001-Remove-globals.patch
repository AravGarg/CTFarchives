From d769eeee66a3550dc195f5f94bae12f2243b6956 Mon Sep 17 00:00:00 2001
From: tukanus superbus <pistukem@gmail.com>
Date: Sat, 25 Apr 2020 16:59:27 +0200
Subject: [PATCH] Remove globals.

---
 src/d8/d8.cc | 7 ++-----
 1 file changed, 2 insertions(+), 5 deletions(-)

diff --git a/src/d8/d8.cc b/src/d8/d8.cc
index d6d21bf5fa..a0729d50ad 100644
--- a/src/d8/d8.cc
+++ b/src/d8/d8.cc
@@ -1266,9 +1266,7 @@ MaybeLocal<Context> Shell::CreateRealm(
     }
     delete[] old_realms;
   }
-  Local<ObjectTemplate> global_template = CreateGlobalTemplate(isolate);
-  Local<Context> context =
-      Context::New(isolate, nullptr, global_template, global_object);
+  Local<Context> context = Context::New(isolate, nullptr, ObjectTemplate::New(isolate), v8::MaybeLocal<Value>());
   DCHECK(!try_catch.HasCaught());
   if (context.IsEmpty()) return MaybeLocal<Context>();
   InitializeModuleEmbedderData(context);
@@ -2175,9 +2173,8 @@ Local<Context> Shell::CreateEvaluationContext(Isolate* isolate) {
   // This needs to be a critical section since this is not thread-safe
   base::MutexGuard lock_guard(context_mutex_.Pointer());
   // Initialize the global objects
-  Local<ObjectTemplate> global_template = CreateGlobalTemplate(isolate);
   EscapableHandleScope handle_scope(isolate);
-  Local<Context> context = Context::New(isolate, nullptr, global_template);
+  Local<Context> context = Context::New(isolate, nullptr, ObjectTemplate::New(isolate));
   DCHECK(!context.IsEmpty());
   if (i::FLAG_perf_prof_annotate_wasm || i::FLAG_vtune_prof_annotate_wasm) {
     isolate->SetWasmLoadSourceMapCallback(ReadFile);
-- 
2.17.1

